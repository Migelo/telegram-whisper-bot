name: Badge Setup (Disabled)

# Disabled to prevent gist errors - see badges-setup-instructions.md
# on:
#   push:
#     branches: [ main ]
#   workflow_run:
#     workflows: ["Tests"]
#     types:
#       - completed

jobs:
  placeholder:
    runs-on: ubuntu-latest
    if: false # Disabled
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Create README with badges
      run: |
        cat << 'EOF' > README.md
        # Telegram Whisper Bot
        
        ![Tests](https://github.com/${{ github.repository }}/workflows/Tests/badge.svg)
        ![Python](https://img.shields.io/badge/python-3.12-blue)
        ![Tests Count](https://img.shields.io/badge/tests-106-brightgreen)
        ![Coverage](https://img.shields.io/badge/coverage-80%25+-green)
        
        A Telegram bot that transcribes audio messages using OpenAI's Whisper.
        
        ## Features
        
        - üé§ Transcribes voice messages and audio files
        - üìä Queue management with 100-file limit  
        - üîÑ Concurrent processing with multiple workers
        - üõ°Ô∏è Comprehensive error handling and validation
        - üß™ 106 tests with full coverage
        - üöÄ Production-ready with CI/CD pipeline
        
        ## Quick Start
        
        1. **Install dependencies:**
           ```bash
           pip install -r requirements.txt
           ```
        
        2. **Set environment variables:**
           ```bash
           export TELEGRAM_BOT_TOKEN="your_bot_token"
           export WHISPER_MODEL="base"  # Optional: tiny, base, small, medium, large
           export NUM_WORKERS="2"       # Optional: number of concurrent workers
           ```
        
        3. **Run the bot:**
           ```bash
           python main.py
           ```
        
        ## Testing
        
        Run the comprehensive test suite:
        ```bash
        # Install test dependencies
        pip install -r requirements-dev.txt
        
        # Run all tests
        pytest
        
        # Run with coverage
        pytest --cov=. --cov-report=html
        ```
        
        See [TESTING.md](TESTING.md) for detailed testing information.
        
        ## Architecture
        
        - **Queue-based processing** with configurable limits
        - **Per-worker Whisper models** for thread safety
        - **Comprehensive validation** for audio files and formats
        - **Error recovery** and graceful degradation
        - **Telegram message chunking** for long transcriptions
        
        ## CI/CD
        
        - **GitHub Actions** with Python 3.12 testing
        - **106 comprehensive tests** covering all functionality  
        - **Coverage reporting** and security scanning
        - **Multi-environment support** (with/without Whisper)
        
        ## Documentation
        
        - [Testing Guide](TESTING.md) - Comprehensive testing documentation
        - [CI/CD Setup](CI-CD-SETUP.md) - Complete CI/CD implementation details
        
        ## License
        
        This project is licensed under the MIT License.
        EOF
    
    - name: Commit README updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update README with current badges and stats
          
          ü§ñ Generated with GitHub Actions"
          git push
        fi